{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","_jsx","className","children","Spin","Cryptocurrencies","simplified","_useGetCryptosQuery","cryptosList","data","isFetching","_useState","useState","_useState2","_slicedToArray","cryptos","setCryptos","_useState3","_useState4","searchTerm","setSearchTerm","useEffect","_cryptosList$data","_cryptosList$data2","coins","filteredData","filter","item","name","toLowerCase","includes","_jsxs","_Fragment","Input","placeholder","onChange","e","target","value","Row","gutter","map","currency","Col","xs","sm","lg","Link","to","uuid","Card","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Typography","Title","Option","Select","News","_data$data","_data$data$coins","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","Avatar","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","Statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Panel","Collapse","Exchanges","_useGetExchangesQuery","exchangesList","exchanges","width","behavior","bgcolor","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","_coinHistory$data5","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","_coinHistory$data","_coinHistory$data$his","history","_coinHistory$data2","push","_coinHistory$data3","_coinHistory$data3$hi","_coinHistory$data4","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","Line","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","_cryptoDetails$allTim","_cryptoDetails$allTim2","_cryptoDetails$supply","_cryptoDetails$supply2","_cryptoDetails$supply3","_cryptoDetails$supply4","_cryptoDetails$supply5","_data$data2","_data$data3","_cryptoDetails$links","useParams","setTimeperiod","_useGetCryptoDetailsQ","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","_ref2","links","link","type","App","Layout","Switch","Route","exact","path","style","color","textAlign","Space","configureStore","reducer","_reducer","_defineProperty","ReactDOM","render","React","StrictMode","Router","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.b4e7cd06.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">CryptoWorld</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges || [];\n  // Note: To access this endpoint you need premium plan for api call\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <marquee width=\"100%\"  behavior=\"slide\" bgcolor=\"pink\">\n        data is not showing because need premium plan for api call\n      </marquee>\n      {/* <h2 style={{\"color\":\"red\", \"textTransform\":\"capitalize\" , \"fontWeight\":\"bolder\"}}>.</h2> */}\n\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.uuid}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.uuid}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n          <Link to=\"/\">\n            Cryptoverse Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}